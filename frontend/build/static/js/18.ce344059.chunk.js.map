{"version":3,"file":"static/js/18.ce344059.chunk.js","mappings":"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","sources":["CardComponent.js","Components/Milestone.js","util/days.js","Components/CreateHabit.js","Components/habit.js","Components/TodayHabits.js","screens/HabitHomeScreen.js","../node_modules/@ramonak/react-progress-bar/src/index.tsx"],"sourcesContent":["\r\nconst CardComponent = (props) => {\r\nreturn <div className=\"card\">\r\n    {props.children}\r\n</div>\r\n}\r\n\r\nexport default CardComponent","\r\nimport React from \"react\";\r\n\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { useSelector } from 'react-redux';\r\nimport CardComponent from '../CardComponent';\r\n\r\nconst Milestone = () => {\r\n\r\n    const { milestonePoints,  nextMilestone } = useSelector(state => state.auth.user);\r\n\r\n    return (\r\n        <CardComponent>\r\n            <section className='milestone-section1'>\r\n                <div>{milestonePoints}</div>\r\n                <p>MileStone</p>\r\n                <div>{`Target Days:  ${nextMilestone}`}</div>\r\n            </section>\r\n            \r\n            <ProgressBar completed={Math.ceil((milestonePoints/nextMilestone)*100)} />\r\n            <i style={{color: \"slategray\"}}>Perform All Habits To Increase Milestone Points</i>\r\n        </CardComponent>\r\n    )\r\n}\r\n\r\nexport default Milestone;\r\n","export const days = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];","import { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../store';\r\nimport { days as week} from '../util/days';\r\nimport CardComponent from '../CardComponent';\r\n\r\nconst RegisterScreen = () => {\r\n    const [formData, setFormData] = useState({\r\n        description:\"\",\r\n        time: \"\",\r\n        days: []\r\n    })\r\n\r\n    const [formError, setFormError] = useState({});\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            dispatch(authActions.createHabitMessage(''));\r\n        }, 2000)\r\n        return () => {\r\n            clearTimeout(timer);\r\n        }\r\n    })\r\n\r\n    const changeHandler = (e) => {\r\n        console.log(e.target.value);\r\n        if(e.target.name === 'days') {\r\n            let copy = { ...formData };\r\n\r\n            if (e.target.checked) {\r\n                copy.days.push(e.target.value);\r\n            } else {\r\n               copy.days = copy.days.filter(item => item !== e.target.value)\r\n            }\r\n\r\n            setFormData(copy);\r\n\r\n        } else {\r\n            setFormData((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    [e.target.name]: e.target.value\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        let error = {}\r\n        console.log(auth.user.id);\r\n        if(formData.description === '') {\r\n            error.description = \"habit is requied\"\r\n        } else if(formData.description.length < 2) {\r\n            error.description = \"habit should be min 2 characters\"\r\n        }\r\n\r\n        if(formData.time === '') {\r\n            error.time = 'time is required!'\r\n        } \r\n\r\n        if(formData.days.length < 1) {\r\n            error.days = 'day is required'\r\n        }\r\n\r\n\r\n        setFormError({ ...error });\r\n\r\n        return Object.keys(error).length < 1;\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(authActions.iscreateLoading())\r\n        let isvalid= validateForm()\r\n\r\n\r\n        if(!isvalid) {\r\n            dispatch(authActions.stopCreateLoading())\r\n            return;\r\n        }\r\n\r\n        axios.post('/api/habits/createHabit', {\r\n            habitDescription: formData.description,\r\n            time: formData.time,\r\n            days: formData.days,\r\n            userId:  JSON.parse(localStorage.getItem(\"USERID\"))\r\n        }, {\r\n            headers:{\"Authorization\": `Bearer ${auth.token}`}\r\n        })\r\n        .then(res => {\r\n            if(parseInt(res.status) === 201) {\r\n                dispatch(authActions.createHabitMessage(\"Created successful\"));\r\n                dispatch(authActions.habitCreated());\r\n            }\r\n            setFormData({\r\n                description:\"\",\r\n                time: \"\",\r\n                days: []\r\n            })\r\n        }).catch(err => {\r\n            const errorMessage = (err.response &&\r\n                 err.response.data && \r\n                 err.response.data.message) \r\n                 || err.message || err.toString();\r\n\r\n                 dispatch(authActions.createHabitMessage(errorMessage));\r\n          \r\n        }).finally(() => {\r\n            dispatch(authActions.stopCreateLoading())\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return <CardComponent>\r\n       {/* Display Message */}\r\n        <p className='createhabit-errormessage'>{auth.createHabitMessage}</p>\r\n\r\n        <section className='createhabit-section2'>\r\n            <form onSubmit={submitHandler}>\r\n                 <div className='habit'>\r\n                    <label htmlFor='description' className='input-label'>Habit</label> <br/>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    placeholder='describe a habit here...'\r\n                    value={formData.description}\r\n                    onChange={changeHandler}\r\n                    ></input>\r\n                    <span className='not-valid'>{formError.description}</span>\r\n                </div>\r\n                <div className='time-week-wrapper'>\r\n                    <div className='time'>\r\n                        <label htmlFor='time' className='input-label'>Time</label> <br/>\r\n                        <input\r\n                        type=\"time\"\r\n                        name=\"time\"\r\n                        id=\"time\"\r\n                        value={formData.time}\r\n                        onChange={changeHandler}\r\n                        ></input>\r\n                        <span className='not-valid'>{formError.time}</span>\r\n                    </div>\r\n\r\n                    <div className='week'>\r\n                        <label htmlFor='days' className='input-label'>Days</label>\r\n                          <div className='week-group'>\r\n                            <div className={formData.days.indexOf(week[0]) !== -1 ? \"circle-wrap bg-b-cw\" : \"circle-wrap bg-w-cb\"}>\r\n                                <input type=\"checkbox\" id=\"sun\"  name=\"days\" value={week[0]} onChange={changeHandler} checked={formData.days.indexOf(week[0]) !== -1}/>\r\n                                <label htmlFor=\"sun\">sun</label>\r\n                            </div>\r\n                            <div className={formData.days.indexOf(week[1]) !== -1 ? \"circle-wrap bg-b-cw\" : \"circle-wrap bg-w-cb\"}>\r\n                                <input type=\"checkbox\" id=\"mon\" name=\"days\" value={week[1]} onChange={changeHandler} checked={formData.days.indexOf(week[1]) !== -1}/>\r\n                                <label htmlFor=\"mon\">mon</label>\r\n                            </div>\r\n                            <div className={formData.days.indexOf(week[2]) !== -1 ? \"circle-wrap bg-b-cw\" : \"circle-wrap bg-w-cb\"}>\r\n                                <input type=\"checkbox\" id=\"tue\" name=\"days\" value={week[2]} onChange={changeHandler} checked={formData.days.indexOf(week[2]) !== -1}/>\r\n                                <label htmlFor=\"tue\">tue</label>\r\n                            </div>\r\n                            <div className={formData.days.indexOf(week[3]) !== -1 ? \"circle-wrap bg-b-cw\" : \"circle-wrap bg-w-cb\"}>\r\n                                <input type=\"checkbox\" id=\"wed\" name=\"days\" value={week[3]} onChange={changeHandler} checked={formData.days.indexOf(week[3]) !== -1}/>\r\n                                <label htmlFor=\"wed\">wed</label>\r\n                            </div>\r\n                            <div className={formData.days.indexOf(week[4]) !== -1 ? \"circle-wrap bg-b-cw\" : \"circle-wrap bg-w-cb\"}>\r\n                                <input type=\"checkbox\" id=\"thu\" name=\"days\" value={week[4]} onChange={changeHandler} checked={formData.days.indexOf(week[4]) !== -1}/>\r\n                                <label htmlFor=\"thu\">thu</label>\r\n                            </div>\r\n                            <div className={formData.days.indexOf(week[5]) !== -1 ? \"circle-wrap bg-b-cw\" : \"circle-wrap bg-w-cb\"}>\r\n                                <input type=\"checkbox\" id=\"fri\" className={formData.days.indexOf(week[5]) !== -1 ? \"bg-b-cw\" : \"bg-w-cb\"} name=\"days\" value={week[5]} onChange={changeHandler} checked={formData.days.indexOf(week[5]) !== -1}/>\r\n                                <label htmlFor=\"fri\">fri</label>\r\n                            </div>\r\n                            <div className={formData.days.indexOf(week[6]) !== -1 ? \"circle-wrap bg-b-cw\" : \"circle-wrap bg-w-cb\"}>\r\n                                <input type=\"checkbox\" id=\"sat\" name=\"days\" value={week[6]} onChange={changeHandler} checked={formData.days.indexOf(week[6]) !== -1}/>\r\n                                <label htmlFor=\"sat\">sat</label>\r\n                            </div>\r\n                          </div>\r\n                        <span className='not-valid'>{formError.days}</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button type='submit' className='habit-btn' disabled={auth.createHabitLoading}> {auth.createHabitLoading? \"Sending Request\" : \"Create Habit\"} </button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n        <i style={{color: \"slategray\"}}>Please Create Your Habit Here !!</i>\r\n    </CardComponent>\r\n}\r\n\r\nexport default RegisterScreen;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { authActions } from \"../store\";\r\n\r\n\r\nconst Habit = ({ data, onChange }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.auth.completedHabits)\r\n    const {time, description, days, _id: id} = data;\r\n   // console.log(auth.indexOf(id) !== -1, id, auth);\r\n  //  console.log(data);\r\n    return(\r\n        <div className=\"habit-wrapper\">\r\n            <div >\r\n                <input type=\"checkbox\" name=\"habit\" id={id}\r\n                value={id} onChange={(e) => dispatch(authActions.completedHabits({\r\n                    value: e.target.value,\r\n                    checked: e.target.checked,\r\n                    name: e.target.name\r\n                }))}\r\n                checked={auth.indexOf(id) !== -1}\r\n                 />\r\n            </div>\r\n                 <label htmlFor={id} className=\"habit-card\">\r\n                            {/* <div className=\"habit-time\">{time}</div> */}\r\n                            <div className=\"habbit-desc\">{description}</div>\r\n                            <i className=\"habit-day\">every {days.map((i, index) => {return <span key={index}>{i+\", \"}</span>})} at {time}</i>\r\n               \r\n                </label>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Habit;","import { useCallback, useEffect, useState,useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport {days} from '../util/days'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../store';\r\nimport Habit from './habit';\r\nimport React from 'react';\r\n\r\nconst TodayHabits = () => {\r\n    const Time = new Date();\r\n    const dispatch = useDispatch();\r\n    const completedHabits = useSelector(state => state.auth.completedHabits);\r\n    const auth = useSelector(state => state.auth);\r\n    const habitsArray = useSelector(state => state.auth.todayHabits);\r\n    const [habits, setHabits] = useState(() => []);\r\n    const [currentDay, setCurrentDay] = useState(() => days[new Date().getDay()]);\r\n    const [index, setIndex] = useState(() => new Date().getDay());\r\n    const [error, setError] = useState({});\r\n    const [disable, setDisable] = useState(true);\r\n    const [submitted, setsubmitted] = useState(false);\r\n    \r\n    const [activeDay, setActiveDay] = useState({\r\n        sun: false,\r\n        mon: false,\r\n        tue: false,\r\n        wed: false,\r\n        thu: false,\r\n        fri: false,\r\n        sat: false,\r\n    })\r\n\r\n    // Adding button functionality\r\n    // Active only to submit current day habits\r\n    useEffect(() => {\r\n        let Today = days[new Date().getDay()];\r\n        if(Today.localeCompare(currentDay, undefined, {sensitivity: 'base'}) ) {\r\n            if(!submitted) {\r\n                setDisable(false);\r\n            }\r\n        } else {\r\n            setDisable(true);\r\n        }\r\n    }, [currentDay])\r\n \r\n    // fetch days habit records \r\n    useEffect(() => {\r\n        let Today = days[new Date().getDay()];\r\n        let USERID = JSON.parse(localStorage.getItem(\"USERID\"));\r\n\r\n        // Optimising res data by storing in reducer\r\n        if(habitsArray[index]) {\r\n            setHabits(habitsArray[index]);\r\n            setActiveDay((prev) =>  {\r\n                return {\r\n                [currentDay] : !prev[currentDay]}\r\n            })\r\n        } \r\n        else {\r\n\r\n            dispatch(authActions.isLoading());\r\n            axios.get(`/api/habits/userTodayHabits?userId=${USERID}&day=${currentDay}`,{\r\n                headers:{\r\n                        \"Authorization\": `Bearer ${auth.token}`\r\n                }\r\n            })\r\n            .then(res => {\r\n                    console.log(res);\r\n                    if(parseInt(res.status) === 200) {\r\n                    //dispatch(authActions.message(\"Register successful\"));\r\n                    const resData = res.data.data || [];\r\n                    console.log(res.data.data);\r\n                    setHabits(resData);\r\n                    dispatch(authActions.todayHabits({\r\n                        data: res.data.data,\r\n                        index: index\r\n                    }));\r\n                    }\r\n                    dispatch(authActions.stopLoading())\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    const errorMessage = (err.response &&\r\n                        err.response.data && \r\n                        err.response.data.message) \r\n                        || err.message || err.toString();\r\n    \r\n                dispatch(authActions.message(errorMessage));\r\n                \r\n            }).finally(() => {\r\n                setActiveDay((prev) =>  {\r\n                    return {\r\n                    [currentDay] : !prev[currentDay]}\r\n                })\r\n                dispatch(authActions.stopLoading())\r\n            })\r\n\r\n        }\r\n\r\n    }, [currentDay])\r\n        \r\n    const fetchhabits = (day) => {\r\n        //console.log(habitsArray);\r\n        let Today = days[day];\r\n       setCurrentDay(Today)\r\n       setIndex(day);\r\n    }\r\n        \r\n    const validateForm = () => {\r\n        let error = {}\r\n        \r\n        if(completedHabits.length < 1) {\r\n            error.message = \"Please Select the completed tasks\"\r\n            }\r\n\r\n\r\n        setError({ ...error });\r\n\r\n        return Object.keys(error).length < 1;\r\n    }\r\n\r\n\r\n   const submitHandler = () => {\r\n    let USERID = JSON.parse(localStorage.getItem(\"USERID\"));\r\n    console.log(\"clicked\");\r\n\r\n     let isvalid = validateForm()\r\n        if(!isvalid) {\r\n            return;\r\n        }\r\n\r\n     axios.post(`/api/habits/dailyProgress`,{\r\n        userId: USERID,\r\n        day: Time.getDay(),\r\n        month: Time.getMonth(),\r\n        year: Time.getFullYear(),\r\n        totalHabits: habits.length,\r\n        completedHabits: completedHabits.length\r\n     },{\r\n        headers:{\r\n            \"Authorization\": `Bearer ${auth.token}`\r\n        }\r\n    })\r\n    .then(res => {\r\n            console.log(res);\r\n            if(parseInt(res.status) === 201) {\r\n                localStorage.setItem('USER', JSON.stringify(res.data.data));\r\n                dispatch(authActions.userUpdate(res.data.data));\r\n                //setDisable(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n            const errorMessage = (err.response &&\r\n                err.response.data && \r\n                err.response.data.message) \r\n                || err.message || err.toString();\r\n\r\n            dispatch(authActions.habitMessage(errorMessage));\r\n        \r\n        }).finally(() => {\r\n            dispatch(authActions.stopTodayLoading())\r\n        })\r\n\r\n   }\r\n\r\n    return (<>\r\n            {auth.todayHabitLoading && (<h5>Loading...</h5>)}\r\n            \r\n            <div className='today-habits-days-wrapper'>\r\n                <div className={!activeDay.sun ? 'today-habits-day' : 'today-habits-day bg-b-cw'} onClick={() => fetchhabits(0)}>Sun</div>\r\n                <div className={!activeDay.mon ? 'today-habits-day' : 'today-habits-day bg-b-cw'} onClick={() => fetchhabits(1)}>Mon</div>\r\n                <div className={!activeDay.tue ? 'today-habits-day' : 'today-habits-day bg-b-cw'} onClick={() => fetchhabits(2)}>Tue</div>\r\n                <div className={!activeDay.wed ? 'today-habits-day' : 'today-habits-day bg-b-cw'} onClick={() => fetchhabits(3)}>Wed</div>\r\n                <div className={!activeDay.thu ? 'today-habits-day' : 'today-habits-day bg-b-cw'} onClick={() => fetchhabits(4)}>Thur</div>\r\n                <div className={!activeDay.fri ? 'today-habits-day' : 'today-habits-day bg-b-cw'} onClick={() => fetchhabits(5)}>Fri</div>\r\n                <div className={!activeDay.sat ? 'today-habits-day' : 'today-habits-day bg-b-cw'} onClick={() => fetchhabits(6)}>Sat</div>\r\n            </div>\r\n\r\n        <div>\r\n            <i style={{color: \"slategray\"}}>Habits To Complete Today</i>\r\n            </div>\r\n            \r\n        <div className='todayHabit-habit'>\r\n            <p className='not-valid'>{error.message}</p> \r\n\r\n            { !auth.todayHabitLoading &&\r\n                habits.length > 0 && (\r\n                    <ul>\r\n                        {\r\n                            habits.map((item, index) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <Habit data={item} />\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                )\r\n            }\r\n        </div>\r\n            {habits.length < 1 && \"No Tasks To show\"}\r\n\r\n\r\n        <div>\r\n                <button type=\"button\" className='habit-day-btn' onClick={submitHandler} disabled={!disable}>{disable? \"Done\": \"Disabled\"}</button>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default React.memo(TodayHabits);","import Milestone from '../Components/Milestone';\r\nimport CreateHabit from '../Components/CreateHabit';\r\nimport TodayHabits from '../Components/TodayHabits';\r\n\r\nconst HabitHomeScreen= () => {\r\n    return <>\r\n\r\n        {/* mileStone comonent */}\r\n        <Milestone /> <br/>\r\n\r\n        {/* habit component */}\r\n        {/* Create habit component */}\r\n        <CreateHabit /> <br/>\r\n\r\n        {/* today habits component */}\r\n        {/* Gets all Habits should peerform current day */}\r\n        <TodayHabits /> <br/>\r\n    </>\r\n}\r\n\r\nexport default HabitHomeScreen;","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nexport type ProgressBarProps = {\n  completed: string | number;\n  bgColor?: string;\n  baseBgColor?: string;\n  height?: string;\n  width?: string;\n  borderRadius?: string;\n  margin?: string;\n  padding?: string;\n  labelAlignment?: \"left\" | \"center\" | \"right\" | \"outside\";\n  labelColor?: string;\n  labelSize?: string;\n  customLabelStyles?: React.CSSProperties;\n  isLabelVisible?: boolean;\n  transitionDuration?: string;\n  transitionTimingFunction?:\n    | \"ease\"\n    | \"linear\"\n    | \"ease-in\"\n    | \"ease-out\"\n    | \"ease-in-out\";\n  className?: string;\n  dir?: \"ltr\" | \"rtl\" | \"auto\";\n  ariaValuemin?: number;\n  ariaValuemax?: number;\n  ariaValuetext?: number | null;\n  maxCompleted?: number;\n  customLabel?: string;\n  animateOnRender?: boolean;\n  barContainerClassName?: string;\n  completedClassName?: string;\n  labelClassName?: string;\n  initCompletedOnAnimation?: string | number;\n};\n\nconst ProgressBar: React.FC<ProgressBarProps> = ({\n  bgColor,\n  completed,\n  baseBgColor,\n  height,\n  width,\n  margin,\n  padding,\n  borderRadius,\n  labelAlignment,\n  labelColor,\n  labelSize,\n  isLabelVisible,\n  customLabelStyles,\n  transitionDuration,\n  transitionTimingFunction,\n  className,\n  dir,\n  ariaValuemin,\n  ariaValuemax,\n  ariaValuetext,\n  maxCompleted,\n  customLabel,\n  animateOnRender,\n  barContainerClassName,\n  completedClassName,\n  labelClassName,\n  initCompletedOnAnimation = 0,\n}) => {\n  const getAlignment = (\n    alignmentOption: ProgressBarProps[\"labelAlignment\"]\n  ) => {\n    if (alignmentOption === \"left\") {\n      return \"flex-start\";\n    } else if (alignmentOption === \"center\") {\n      return \"center\";\n    } else if (alignmentOption === \"right\") {\n      return \"flex-end\";\n    } else {\n      return null;\n    }\n  };\n\n  const alignment = getAlignment(labelAlignment);\n\n  const initCompletedOnAnimationStr =\n    typeof initCompletedOnAnimation === \"number\"\n      ? `${initCompletedOnAnimation}%`\n      : initCompletedOnAnimation;\n\n  const getFillerWidth = (\n    maxCompletedValue: ProgressBarProps[\"maxCompleted\"],\n    completedValue: ProgressBarProps[\"completed\"]\n  ) => {\n    if (maxCompletedValue) {\n      const ratio = Number(completedValue) / maxCompletedValue;\n      return ratio > 1 ? \"100%\" : `${ratio * 100}%`;\n    }\n    return initCompletedOnAnimationStr;\n  };\n\n  const fillerWidth = getFillerWidth(maxCompleted, completed);\n\n  const [initWidth, setInitWidth] = React.useState<string>(\n    initCompletedOnAnimationStr\n  );\n\n  const containerStyles: React.CSSProperties = {\n    height: height,\n    background: baseBgColor,\n    borderRadius: borderRadius,\n    padding: padding,\n    width: width,\n    margin: margin,\n    overflow: \"hidden\",\n  };\n\n  const fillerStyles: React.CSSProperties = {\n    height: height,\n    width: animateOnRender ? initWidth : fillerWidth,\n    background: bgColor,\n    transition: `width ${transitionDuration || \"1s\"} ${\n      transitionTimingFunction || \"ease-in-out\"\n    }`,\n    borderRadius: \"inherit\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent:\n      labelAlignment !== \"outside\" && alignment ? alignment : \"normal\",\n  };\n\n  const labelStyles: React.CSSProperties = {\n    padding: labelAlignment === \"outside\" ? \"0 0 0 5px\" : \"5px\",\n    color: labelColor,\n    fontWeight: \"bold\",\n    fontSize: labelSize,\n    display: !isLabelVisible ? \"none\" : \"initial\",\n    ...customLabelStyles,\n  };\n\n  const outsideStyles = {\n    display: labelAlignment === \"outside\" ? \"flex\" : \"initial\",\n    alignItems: labelAlignment === \"outside\" ? \"center\" : \"initial\",\n  };\n\n  const completedStr =\n    typeof completed === \"number\" ? `${completed}%` : `${completed}`;\n\n  const labelStr = customLabel ? customLabel : completedStr;\n\n  React.useEffect(() => {\n    if (animateOnRender) {\n      requestAnimationFrame(() => setInitWidth(fillerWidth));\n    }\n  }, [fillerWidth, animateOnRender]);\n\n  return (\n    <div\n      style={className ? undefined : outsideStyles}\n      className={className}\n      dir={dir}\n      role=\"progressbar\"\n      aria-valuenow={parseFloat(labelStr)}\n      aria-valuemin={ariaValuemin}\n      aria-valuemax={ariaValuemax}\n      aria-valuetext={`${ariaValuetext === null ? labelStr : ariaValuetext}`}\n    >\n      <div\n        style={barContainerClassName ? undefined : containerStyles}\n        className={barContainerClassName}\n      >\n        <div\n          style={completedClassName ? undefined : fillerStyles}\n          className={completedClassName}\n        >\n          {labelAlignment !== \"outside\" && (\n            <span\n              style={labelClassName ? undefined : labelStyles}\n              className={labelClassName}\n            >\n              {labelStr}\n            </span>\n          )}\n        </div>\n      </div>\n      {labelAlignment === \"outside\" && (\n        <span\n          style={labelClassName ? undefined : labelStyles}\n          className={labelClassName}\n        >\n          {labelStr}\n        </span>\n      )}\n    </div>\n  );\n};\n\nProgressBar.propTypes = {\n  completed: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  bgColor: PropTypes.string,\n  baseBgColor: PropTypes.string,\n  height: PropTypes.string,\n  width: PropTypes.string,\n  borderRadius: PropTypes.string,\n  margin: PropTypes.string,\n  padding: PropTypes.string,\n  labelAlignment: PropTypes.oneOf([\"left\", \"center\", \"right\", \"outside\"]),\n  labelColor: PropTypes.string,\n  labelSize: PropTypes.string,\n  isLabelVisible: PropTypes.bool,\n  className: PropTypes.string,\n  dir: PropTypes.oneOf([\"rtl\", \"ltr\", \"auto\"]),\n  maxCompleted: PropTypes.number,\n  customLabel: PropTypes.string,\n  animateOnRender: PropTypes.bool,\n  barContainerClassName: PropTypes.string,\n  completedClassName: PropTypes.string,\n  labelClassName: PropTypes.string,\n  initCompletedOnAnimation: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n};\n\nProgressBar.defaultProps = {\n  bgColor: \"#6a1b9a\",\n  height: \"20px\",\n  width: \"100%\",\n  borderRadius: \"50px\",\n  labelAlignment: \"right\",\n  baseBgColor: \"#e0e0de\",\n  labelColor: \"#fff\",\n  labelSize: \"15px\",\n  isLabelVisible: true,\n  dir: \"ltr\",\n  ariaValuemin: 0,\n  ariaValuemax: 100,\n  ariaValuetext: null,\n  maxCompleted: 100,\n  animateOnRender: false,\n  initCompletedOnAnimation: 0,\n};\n\nexport default ProgressBar;\n"],"names":["props","className","children","useSelector","state","auth","user","milestonePoints","nextMilestone","CardComponent","completed","Math","ceil","style","color","days","useState","description","time","formData","setFormData","formError","setFormError","dispatch","useDispatch","useEffect","timer","setTimeout","authActions","clearTimeout","changeHandler","e","console","log","target","value","name","copy","checked","push","filter","item","prev","createHabitMessage","onSubmit","preventDefault","error","id","length","Object","keys","validateForm","axios","habitDescription","userId","JSON","parse","localStorage","getItem","headers","token","then","res","parseInt","status","catch","err","errorMessage","response","data","message","toString","finally","htmlFor","type","placeholder","onChange","indexOf","week","disabled","createHabitLoading","completedHabits","_id","map","i","index","TodayHabits","Time","Date","habitsArray","todayHabits","habits","setHabits","getDay","currentDay","setCurrentDay","setIndex","setError","disable","setDisable","submitted","sun","mon","tue","wed","thu","fri","sat","activeDay","setActiveDay","localeCompare","undefined","sensitivity","USERID","resData","fetchhabits","day","todayHabitLoading","onClick","isvalid","month","getMonth","year","getFullYear","totalHabits","setItem","stringify","React","CreateHabit","ProgressBar","_a","alignmentOption","bgColor","baseBgColor","height","width","margin","padding","borderRadius","labelAlignment","labelColor","labelSize","isLabelVisible","customLabelStyles","transitionDuration","transitionTimingFunction","dir","ariaValuemin","ariaValuemax","ariaValuetext","maxCompleted","customLabel","animateOnRender","barContainerClassName","completedClassName","labelClassName","_b","initCompletedOnAnimation","alignment","initCompletedOnAnimationStr","fillerWidth","maxCompletedValue","completedValue","ratio","Number","getFillerWidth","initWidth","setInitWidth","containerStyles","background","overflow","fillerStyles","transition","display","alignItems","justifyContent","labelStyles","__assign","fontWeight","fontSize","outsideStyles","completedStr","labelStr","requestAnimationFrame","role","parseFloat","propTypes","PropTypes","oneOfType","string","number","isRequired","oneOf","bool","defaultProps"],"sourceRoot":""}
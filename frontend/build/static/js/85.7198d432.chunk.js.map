{"version":3,"file":"static/js/85.7198d432.chunk.js","mappings":"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","sources":["CardComponent.js","Components/Progress.js","../node_modules/react-minimal-pie-chart/src/utils.ts","../node_modules/react-minimal-pie-chart/src/Chart/extendData.ts","../node_modules/react-minimal-pie-chart/src/Label.tsx","../node_modules/react-minimal-pie-chart/src/Chart/renderLabels.tsx","../node_modules/react-minimal-pie-chart/node_modules/svg-partial-circle/index.js","../node_modules/react-minimal-pie-chart/src/Path.tsx","../node_modules/react-minimal-pie-chart/src/Chart/renderSegments.tsx","../node_modules/react-minimal-pie-chart/src/Chart/Chart.tsx","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["\r\nconst CardComponent = (props) => {\r\nreturn <div className=\"card\">\r\n    {props.children}\r\n</div>\r\n}\r\n\r\nexport default CardComponent","import CardComponent from \"../CardComponent\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nconst Progress = () => {\r\n    const todayHabits = useSelector(state => state.auth.todayHabits)\r\n    const completed = useSelector(state => state.auth.completedHabits)\r\n    const [total, setTotal] = useState(0);\r\n\r\n   useEffect(() => {\r\n        let length = 0;\r\n        todayHabits.forEach(element => {\r\n                length += element.length;\r\n        });\r\n        setTotal(length);\r\n   }, [])\r\n\r\n    return (\r\n        <CardComponent>\r\n            <i> Your Progress Today </i>\r\n\r\n            <div>\r\n                <div>\r\n                    Total Habits: {parseInt(total)}\r\n                </div>\r\n                <div>\r\n                    completed Habits: {parseInt(completed.length)}\r\n                </div>\r\n            </div>\r\n\r\n             <PieChart\r\n                data={[{ value: parseInt(completed.length), color: '#E38627' }]}\r\n                style={{ height: '300px' }}\r\n                totalValue={parseInt(total)}\r\n                lineWidth={20}\r\n                label={({ dataEntry }) => dataEntry.value}\r\n                labelStyle={{\r\n                    fontSize: '25px',\r\n                    fontFamily: 'sans-serif',\r\n                    fill: '#E38627',\r\n                }}\r\n                labelPosition={0}\r\n                />\r\n\r\n                <i>{`You Made ${parseInt((completed.length/total)*100)}% progress`}</i>\r\n                <br/>\r\n                <i style={{color: \"red\"}}>Note: {`Select The Completed Habits To See The Progress`}</i>\r\n        </CardComponent>\r\n    )\r\n}\r\n\r\nexport default Progress;","export function degreesToRadians(degrees: number) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport function valueBetween(value: number, min: number, max: number) {\n  if (value > max) return max;\n  if (value < min) return min;\n  return value;\n}\n\nexport function extractPercentage(value: number, percentage: number) {\n  return (percentage / 100) * value;\n}\n\nexport function bisectorAngle(startAngle: number, lengthAngle: number) {\n  return startAngle + lengthAngle / 2;\n}\n\nexport function shiftVectorAlongAngle(angle: number, distance: number) {\n  const angleRadians = degreesToRadians(angle);\n  return {\n    dx: distance * Math.cos(angleRadians),\n    dy: distance * Math.sin(angleRadians),\n  };\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\nexport function functionProp<Prop, Payload>(\n  prop: Prop,\n  payload?: Payload\n): Prop extends (...args: any) => any ? ReturnType<Prop> : Prop {\n  return typeof prop === 'function' ? prop(payload) : prop;\n}\n\nexport function makePropsWithDefaults<Result extends Object>(\n  props: Partial<Result>,\n  defaultProps: Result\n): Result {\n  const result: Result = Object.assign({}, defaultProps, props);\n\n  // @NOTE Object.assign doesn't default properties with undefined value (like React defaultProps does)\n  for (const key in defaultProps) {\n    if (props[key] === undefined) {\n      result[key] = defaultProps[key];\n    }\n  }\n\n  return result;\n}\n","import { extractPercentage, valueBetween } from '../utils';\nimport type { Data, BaseDataEntry, ExtendedData } from '../commonTypes';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\n\nfunction sumValues<DataEntry extends BaseDataEntry>(\n  data: Data<DataEntry>\n): number {\n  let sum = 0;\n  for (let i = 0; i < data.length; i++) {\n    sum += data[i].value;\n  }\n  return sum;\n}\n\n// Append \"percentage\", \"degrees\" and \"startAngle\" to each data entry\nexport default function extendData<DataEntry extends BaseDataEntry>({\n  data,\n  lengthAngle: totalAngle,\n  totalValue,\n  paddingAngle,\n  startAngle: chartStartAngle,\n}: ChartProps<DataEntry>): ExtendedData<DataEntry> {\n  const total = totalValue || sumValues(data);\n  const normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n  const numberOfPaddings =\n    Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n  const singlePaddingDegrees = Math.abs(paddingAngle) * Math.sign(totalAngle);\n  const degreesTakenByPadding = singlePaddingDegrees * numberOfPaddings;\n  const degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n  let lastSegmentEnd = 0;\n  const extendedData: ExtendedData<DataEntry> = [];\n\n  // @NOTE: Shall we evaluate percentage accordingly to dataEntry.value's sign?\n  for (let i = 0; i < data.length; i++) {\n    const dataEntry = data[i];\n    const valueInPercentage = total === 0 ? 0 : (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startAngle = lastSegmentEnd + chartStartAngle;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n    extendedData.push(\n      Object.assign(\n        {\n          percentage: valueInPercentage,\n          startAngle,\n          degrees,\n        },\n        dataEntry\n      )\n    );\n  }\n  return extendedData;\n}\n","import React from 'react';\nimport type { CSSProperties, SVGProps } from 'react';\nimport type {\n  ExtendedData,\n  BaseDataEntry,\n  LabelRenderFunction,\n} from './commonTypes';\n\nexport type LabelRenderProps<DataEntry extends BaseDataEntry> = {\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  textAnchor: string;\n  dataEntry: ExtendedData<DataEntry>[number];\n  dataIndex: number;\n  style?: CSSProperties;\n};\n\nexport default function ReactMinimalPieChartLabel<\n  DataEntry extends BaseDataEntry\n>({\n  renderLabel,\n  labelProps,\n}: {\n  renderLabel: LabelRenderFunction<DataEntry>;\n  labelProps: LabelRenderProps<DataEntry>;\n}) {\n  const label = renderLabel(labelProps);\n\n  // Default label\n  if (typeof label === 'string' || typeof label === 'number') {\n    const { dataEntry, dataIndex, ...props } = labelProps;\n    return (\n      <text dominantBaseline=\"central\" {...props}>\n        {label}\n      </text>\n    );\n  }\n\n  if (React.isValidElement(label)) {\n    return label;\n  }\n\n  return null;\n}\n","import React from 'react';\nimport Label from '../Label';\nimport {\n  bisectorAngle,\n  extractPercentage,\n  functionProp,\n  shiftVectorAlongAngle,\n} from '../utils';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\nimport type { LabelRenderProps } from '../Label';\nimport type { ExtendedData, BaseDataEntry } from '../commonTypes';\n\nfunction round(number: number): number {\n  const divisor = 1e14; // 14 decimals\n  return Math.round((number + Number.EPSILON) * divisor) / divisor;\n}\n\nfunction evaluateTextAnchorPosition({\n  labelPosition,\n  lineWidth,\n  labelHorizontalShift,\n}: {\n  labelPosition: number;\n  lineWidth: number;\n  labelHorizontalShift: number;\n}) {\n  const dx = round(labelHorizontalShift);\n  // Label in the vertical center\n  if (dx === 0) {\n    return 'middle';\n  }\n  // Outward label\n  if (labelPosition > 100) {\n    return dx > 0 ? 'start' : 'end';\n  }\n  // Inward label\n  const innerRadius = 100 - lineWidth;\n  if (labelPosition < innerRadius) {\n    return dx > 0 ? 'end' : 'start';\n  }\n  // Overlying label\n  return 'middle';\n}\n\nfunction makeLabelRenderProps<DataEntry extends BaseDataEntry>(\n  data: ExtendedData<DataEntry>,\n  props: ChartProps<DataEntry>\n): LabelRenderProps<DataEntry>[] {\n  return data.map((dataEntry, index) => {\n    const segmentsShift = functionProp(props.segmentsShift, index) ?? 0;\n    const distanceFromCenter =\n      extractPercentage(props.radius, props.labelPosition) + segmentsShift;\n    const { dx, dy } = shiftVectorAlongAngle(\n      bisectorAngle(dataEntry.startAngle, dataEntry.degrees),\n      distanceFromCenter\n    );\n\n    // This object is passed as argument to the \"label\" function prop\n    const labelRenderProps: LabelRenderProps<DataEntry> = {\n      x: props.center[0],\n      y: props.center[1],\n      dx,\n      dy,\n      textAnchor: evaluateTextAnchorPosition({\n        labelPosition: props.labelPosition,\n        lineWidth: props.lineWidth,\n        labelHorizontalShift: dx,\n      }),\n      dataEntry,\n      dataIndex: index,\n      style: functionProp(props.labelStyle, index),\n    };\n\n    return labelRenderProps;\n  });\n}\n\nexport default function renderLabels<DataEntry extends BaseDataEntry>(\n  data: ExtendedData<DataEntry>,\n  props: ChartProps<DataEntry>\n) {\n  const { label } = props;\n  if (label) {\n    return makeLabelRenderProps(data, props).map((labelRenderProps, index) => (\n      <Label\n        key={`label-${labelRenderProps.dataEntry.key || index}`}\n        renderLabel={label}\n        labelProps={labelRenderProps}\n      />\n    ));\n  }\n}\n","'use strict'\n\n// from http://stackoverflow.com/a/18473154\nconst partialCircle = (cx, cy, r, start, end) => {\n\tconst length = end - start\n\tif (length === 0) return []\n\n\tconst fromX = r * Math.cos(start) + cx\n\tconst fromY = r * Math.sin(start) + cy\n\tconst toX = r * Math.cos(end) + cx\n\tconst toY = r * Math.sin(end) + cy\n\tconst large = Math.abs(length) <= Math.PI ? '0' : '1'\n\tconst sweep = length < 0 ? '0' : '1'\n\n\treturn [\n\t\t['M', fromX, fromY],\n\t\t['A', r, r, 0, large, sweep, toX, toY]\n\t]\n}\n\nmodule.exports = partialCircle\n","import React from 'react';\nimport type { SVGProps } from 'react';\nimport partialCircle from 'svg-partial-circle';\nimport {\n  bisectorAngle,\n  degreesToRadians,\n  extractPercentage,\n  isNumber,\n  shiftVectorAlongAngle,\n  valueBetween,\n} from './utils';\n\nexport function makePathCommands(\n  cx: number,\n  cy: number,\n  startAngle: number,\n  lengthAngle: number,\n  radius: number\n): string {\n  const patchedLengthAngle = valueBetween(lengthAngle, -359.999, 359.999);\n\n  return partialCircle(\n    cx,\n    cy, // center X and Y\n    radius,\n    degreesToRadians(startAngle),\n    degreesToRadians(startAngle + patchedLengthAngle)\n  )\n    .map((command) => command.join(' '))\n    .join(' ');\n}\n\ntype Props = SVGProps<SVGPathElement> & {\n  cx: number;\n  cy: number;\n  lengthAngle: number;\n  lineWidth: number;\n  radius: number;\n  reveal?: number;\n  rounded?: boolean;\n  shift?: number;\n  startAngle: number;\n  title?: string | number;\n};\n\nexport default function ReactMinimalPieChartPath({\n  cx,\n  cy,\n  lengthAngle,\n  lineWidth,\n  radius,\n  shift = 0,\n  reveal,\n  rounded,\n  startAngle,\n  title,\n  ...props\n}: Props) {\n  const pathRadius = radius - lineWidth / 2;\n  //@NOTE This shift might be rendered as a translation in future\n  const { dx, dy } = shiftVectorAlongAngle(\n    bisectorAngle(startAngle, lengthAngle),\n    shift\n  );\n\n  const pathCommands = makePathCommands(\n    cx + dx,\n    cy + dy,\n    startAngle,\n    lengthAngle,\n    pathRadius\n  );\n  let strokeDasharray;\n  let strokeDashoffset;\n\n  // Animate/hide paths with \"stroke-dasharray\" + \"stroke-dashoffset\"\n  // https://css-tricks.com/svg-line-animation-works/\n  if (isNumber(reveal)) {\n    const pathLength = degreesToRadians(pathRadius) * lengthAngle;\n    strokeDasharray = Math.abs(pathLength);\n    strokeDashoffset =\n      strokeDasharray - extractPercentage(strokeDasharray, reveal);\n  }\n\n  return (\n    <path\n      d={pathCommands}\n      fill=\"none\"\n      strokeWidth={lineWidth}\n      strokeDasharray={strokeDasharray}\n      strokeDashoffset={strokeDashoffset}\n      strokeLinecap={rounded ? 'round' : undefined}\n      {...props}\n    >\n      {title && <title>{title}</title>}\n    </path>\n  );\n}\n","import React from 'react';\nimport type { CSSProperties, SyntheticEvent } from 'react';\nimport Path from '../Path';\nimport { extractPercentage, functionProp, isNumber } from '../utils';\nimport type { ExtendedData, BaseDataEntry } from '../commonTypes';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\n\nfunction combineSegmentTransitionsStyle(\n  duration: number,\n  easing: string,\n  customStyle?: CSSProperties\n): { transition: string } {\n  // Merge chart's animation CSS transition with \"transition\" found to customStyle\n  let transition = `stroke-dashoffset ${duration}ms ${easing}`;\n  if (customStyle && customStyle.transition) {\n    transition = `${transition},${customStyle.transition}`;\n  }\n  return {\n    transition,\n  };\n}\n\nfunction getRevealValue<Reveal>(props: { reveal?: Reveal; animate?: boolean }) {\n  //@NOTE When animation is on, chart has to be fully revealed when reveal is not set\n  if (props.animate && !isNumber(props.reveal)) {\n    return 100;\n  }\n  return props.reveal;\n}\n\nfunction makeEventHandler<\n  Event extends SyntheticEvent,\n  Payload,\n  EventHandler extends (event: Event, payload: Payload) => void\n>(eventHandler: undefined | EventHandler, payload: Payload) {\n  return (\n    eventHandler &&\n    ((e: Event) => {\n      eventHandler(e, payload);\n    })\n  );\n}\n\nexport default function renderSegments<DataEntry extends BaseDataEntry>(\n  data: ExtendedData<DataEntry>,\n  props: ChartProps<DataEntry>,\n  revealOverride?: null | number\n) {\n  // @NOTE this should go in Path component. Here for performance reasons\n  const reveal = revealOverride ?? getRevealValue(props);\n  const {\n    radius,\n    center: [cx, cy],\n  } = props;\n  const lineWidth = extractPercentage(radius, props.lineWidth);\n  const paths = data.map((dataEntry, index) => {\n    const segmentsStyle = functionProp(props.segmentsStyle, index);\n    return (\n      <Path\n        cx={cx}\n        cy={cy}\n        key={dataEntry.key || index}\n        lengthAngle={dataEntry.degrees}\n        lineWidth={lineWidth}\n        radius={radius}\n        rounded={props.rounded}\n        reveal={reveal}\n        shift={functionProp(props.segmentsShift, index)}\n        startAngle={dataEntry.startAngle}\n        title={dataEntry.title}\n        style={Object.assign(\n          {},\n          segmentsStyle,\n          props.animate &&\n            combineSegmentTransitionsStyle(\n              props.animationDuration,\n              props.animationEasing,\n              segmentsStyle\n            )\n        )}\n        stroke={dataEntry.color}\n        tabIndex={props.segmentsTabIndex}\n        onBlur={makeEventHandler(props.onBlur, index)}\n        onClick={makeEventHandler(props.onClick, index)}\n        onFocus={makeEventHandler(props.onFocus, index)}\n        onKeyDown={makeEventHandler(props.onKeyDown, index)}\n        onMouseOver={makeEventHandler(props.onMouseOver, index)}\n        onMouseOut={makeEventHandler(props.onMouseOut, index)}\n      />\n    );\n  });\n\n  if (props.background) {\n    paths.unshift(\n      <Path\n        cx={cx}\n        cy={cy}\n        key=\"bg\"\n        lengthAngle={props.lengthAngle}\n        lineWidth={lineWidth}\n        radius={radius}\n        rounded={props.rounded}\n        startAngle={props.startAngle}\n        stroke={props.background}\n      />\n    );\n  }\n\n  return paths;\n}\n","import React, { useState, useEffect } from 'react';\nimport type {\n  CSSProperties,\n  FocusEvent,\n  KeyboardEvent,\n  MouseEvent,\n  ReactNode,\n} from 'react';\nimport extendData from './extendData';\nimport renderLabels from './renderLabels';\nimport renderSegments from './renderSegments';\nimport type { Data, BaseDataEntry, LabelRenderFunction } from '../commonTypes';\nimport { makePropsWithDefaults } from '../utils';\n\nexport type Props<DataEntry extends BaseDataEntry = BaseDataEntry> = {\n  animate?: boolean;\n  animationDuration?: number;\n  animationEasing?: string;\n  background?: string;\n  center?: [number, number];\n  children?: ReactNode;\n  className?: string;\n  data: Data<DataEntry>;\n  lengthAngle?: number;\n  lineWidth?: number;\n  label?: LabelRenderFunction<DataEntry>;\n  labelPosition?: number;\n  labelStyle?:\n    | CSSProperties\n    | ((dataIndex: number) => CSSProperties | undefined);\n  onBlur?: (event: FocusEvent, dataIndex: number) => void;\n  onClick?: (event: MouseEvent, dataIndex: number) => void;\n  onFocus?: (event: FocusEvent, dataIndex: number) => void;\n  onKeyDown?: (event: KeyboardEvent, dataIndex: number) => void;\n  onMouseOut?: (event: MouseEvent, dataIndex: number) => void;\n  onMouseOver?: (event: MouseEvent, dataIndex: number) => void;\n  paddingAngle?: number;\n  radius?: number;\n  reveal?: number;\n  rounded?: boolean;\n  segmentsShift?: number | ((dataIndex: number) => number | undefined);\n  segmentsStyle?:\n    | CSSProperties\n    | ((dataIndex: number) => CSSProperties | undefined);\n  segmentsTabIndex?: number;\n  startAngle?: number;\n  style?: CSSProperties;\n  totalValue?: number;\n  viewBoxSize?: [number, number];\n};\n\nexport const defaultProps = {\n  animationDuration: 500,\n  animationEasing: 'ease-out',\n  center: [50, 50] as [number, number],\n  data: [] as Data,\n  labelPosition: 50,\n  lengthAngle: 360,\n  lineWidth: 100,\n  paddingAngle: 0,\n  radius: 50,\n  startAngle: 0,\n  viewBoxSize: [100, 100] as [number, number],\n};\n\nexport type PropsWithDefaults<\n  DataEntry extends BaseDataEntry\n> = Props<DataEntry> & typeof defaultProps;\n\nexport function ReactMinimalPieChart<DataEntry extends BaseDataEntry>(\n  originalProps: Props<DataEntry>\n) {\n  const props = makePropsWithDefaults<PropsWithDefaults<DataEntry>>(\n    originalProps,\n    // @ts-expect-error: defaultProps.data is typed as BaseDataEntry\n    defaultProps\n  );\n  const [revealOverride, setRevealOverride] = useState(\n    props.animate ? 0 : null\n  );\n\n  useEffect(() => {\n    if (props.animate) {\n      // Trigger initial animation\n      setRevealOverride(null);\n    }\n  }, []);\n\n  const extendedData = extendData(props);\n  return (\n    <svg\n      viewBox={`0 0 ${props.viewBoxSize[0]} ${props.viewBoxSize[1]}`}\n      width=\"100%\"\n      height=\"100%\"\n      className={props.className}\n      style={props.style}\n    >\n      {renderSegments(extendedData, props, revealOverride)}\n      {renderLabels(extendedData, props)}\n      {props.children}\n    </svg>\n  );\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["props","className","children","todayHabits","useSelector","state","auth","completed","completedHabits","useState","total","setTotal","useEffect","length","forEach","element","parseInt","PieChart","data","value","color","style","height","totalValue","lineWidth","label","dataEntry","labelStyle","fontSize","fontFamily","fill","labelPosition","degreesToRadians","degrees","Math","PI","valueBetween","min","max","extractPercentage","percentage","bisectorAngle","startAngle","lengthAngle","shiftVectorAlongAngle","angle","distance","angleRadians","dx","cos","dy","sin","isNumber","functionProp","prop","payload","makePropsWithDefaults","defaultProps","result","Object","assign","key","undefined","sumValues","sum","i","extendData","_ref","totalAngle","paddingAngle","chartStartAngle","normalizedTotalAngle","numberOfPaddings","abs","singlePaddingDegrees","sign","degreesTakenByPaths","lastSegmentEnd","extendedData","valueInPercentage","push","ReactMinimalPieChartLabel","renderLabel","labelProps","dataIndex","React","dominantBaseline","isValidElement","round","number","divisor","Number","EPSILON","evaluateTextAnchorPosition","labelHorizontalShift","makeLabelRenderProps","map","index","segmentsShift","distanceFromCenter","radius","x","center","y","textAnchor","renderLabels","labelRenderProps","Label","cx","cy","r","start","end","fromX","fromY","toX","toY","makePathCommands","patchedLengthAngle","partialCircle","command","join","ReactMinimalPieChartPath","strokeDasharray","strokeDashoffset","_ref$shift","shift","reveal","rounded","title","pathRadius","pathCommands","pathLength","d","strokeWidth","strokeLinecap","combineSegmentTransitionsStyle","duration","easing","customStyle","transition","getRevealValue","animate","makeEventHandler","eventHandler","e","renderSegments","revealOverride","_props$center","paths","segmentsStyle","Path","animationDuration","animationEasing","stroke","tabIndex","segmentsTabIndex","onBlur","onClick","onFocus","onKeyDown","onMouseOver","onMouseOut","background","unshift","viewBoxSize","ReactMinimalPieChart","originalProps","setRevealOverride","viewBox","width","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","done","err","o","minLen","n","prototype","toString","slice","constructor","name","from","test","TypeError"],"sourceRoot":""}